1. after user prompt CLI asks whether he wants to go to comments or next post.
2. delete bot comments
3. add the date of post 
4. DONE: (possible to make an another service-repository- or smth to store query data temporarily, to navigate through results)
5. WORKS TOO SLOW
6. edge cases
7. better architecture needed. store service should not work if no post being initialized for it. 

I'm building a parser application following the best practices on OOP and dependency injection. 
I have two services: ParseService and StoreService. 
ParseService is responsible for getting the user prompt, then searching relevant information 
from an external source. After receiving the data from the external source ParseService transforms it and 
gives it to the StoreService. StoreService has different methods for retrieving needed parts of that data and 
is available for consuming by user faced part of the program. The problem is, StoreService is kind of depended 
on ParseService because it is not possible to use it before setting up ParseService
and it violates some of the OOP principles as far as I know (correct me if I'm wrong).
Suggest me best architectural desing for my application.
